#!/bin/bash

# STSBL Repository Configuration Program
# Copyright (C) 2016 Felix Jacobi
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

# Abort on errors
set -e

# Prints out the program help
echoHelp() {
  echo "Usement:"
  echo "  stsbl-umode"
  echo "  Print current update mode and exit."
  echo
  echo "  stsbl-umode [ stable | testing | unstable ]"
  echo "  Set a new update mode."
  echo
  echo "  stsbl-umode --help"
  echo "  Print out this help and exit."
}

# Store values to state file
storeParams() {
  if [ ! -e "/var/lib/stsbl/" ]; then
    mkdir /var/lib/stsbl/
  fi
  if [ ! -e "/var/lib/stsbl/repoconfig.sh" ]; then
    touch /var/lib/stsbl/repoconfig.sh
  fi
  echo "#!/bin/sh" > /var/lib/stsbl/repoconfig.sh
  echo "# Automatically generated! Do not change!" >> /var/lib/stsbl/repoconfig.sh
  echo "REPOCUSTOMERNUMBER=\"$REPOCUSTOMERNUMBER\"" >> /var/lib/stsbl/repoconfig.sh
  echo "REPOPASSWORD=\"$REPOPASSWORD\"" >> /var/lib/stsbl/repoconfig.sh
  echo "REPOUPDATEMODE=\"$NEWUPDATEMODE\"" >> /var/lib/stsbl/repoconfig.sh
  echo "Params stored sucessfull."
}

# Superuser check
if [ $UID != 0 ]; then
  echo "Root rights are required to run this program." >&2
  exit 0
fi

# Checking number of arguments
if [ "$#" -gt 1 ] || [ "$#" -lt 0 ]
then
  echo "Wrong number of arguments." >&2
  echo >&2
  echoHelp >&2
  exit 0
fi

if [ "$1" = "--help" ]
then
  echoHelp
  exit 0
fi

# Reading config
source /usr/lib/stsbl/repocfg

OLDUPDATEMODE="$REPOUPDATEMODE"
NEWUPDATEMODE="$1"

if [ "$#" = 0 ]
then
  echo "The current update mode is $OLDUPDATEMODE."
  exit 0
fi

if [ "$NEWUPDATEMODE" = "$OLDUPDATEMODE" ]
then
  echo "The update mode will keep the value $NEWUPDATEMODE."
  exit 0
elif [ "$NEWUPDATEMODE" = "stable" ] || [ "$NEWUPDATEMODE" = "testing" ] || [ "$NEWUPDATEMODE" = "unstable" ]
then
  echo "$OLDUPDATEMODE -> $NEWUPDATEMODE"
else
  echo "Unknown update mode." >&2
  echo >&2
  echoHelp >&2
  exit 0
fi

storeParams
iservchk apt
aptitude update &> /dev/null
exit 0
